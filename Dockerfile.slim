################################################################################
# Dockerfile that contains Barotrauma Dedicated Server.
# Come with SteamCMD.
# Will download the server on first start.
# Will update the server on every start.
#
# SteamCMD part is inspired by: https://github.com/CM2Walki/steamcmd
# BaroServer part is inspired by: https://github.com/gnoeley/barotrauma-dedicated-server-docker
################################################################################

FROM opensuse/leap:15.4

LABEL maintainer="code@yanwk.fun"

# This image is less-often built, so less cache layer is needed.
# 1. Create a low-privilege user.
# 2. Install .NET runtime & SteamCMD.
# 3. Disable all Zypper repos.
# 4. Run SteamCMD for the first time, let it update.
# 5. Clear /tmp when done.
RUN set -eux \
    && sed -i 's/^CREATE_MAIL_SPOOL=yes/CREATE_MAIL_SPOOL=no/' /etc/default/useradd \
    && mkdir -p /home/runner \
    && groupadd runner \
    && useradd runner -g runner -d /home/runner \
    && chown runner:runner /home/runner \
    && printf "\
[packages-microsoft-com-prod]\n\
name=packages-microsoft-com-prod\n\
baseurl=https://packages.microsoft.com/opensuse/15/prod/\n\
enabled=1\n\
gpgcheck=1\n\
gpgkey=https://packages.microsoft.com/keys/microsoft.asc\n" \
        > /etc/zypp/repos.d/microsoft-prod.repo \
    && zypper --gpg-auto-import-keys \
        install --no-confirm --no-recommends --auto-agree-with-licenses \
           libicu \
           dotnet-runtime-6.0 \
           libSDL2-2_0-0 \
           steamcmd \
    && zypper modifyrepo --disable --all \
    && rm -rf /var/cache/zypp/* \
    && steamcmd +'quit' \
    && rm -rf /root/Steam/appcache/httpcache/* \ 
    && rm -rf /tmp/*

# The game server will be installed & running in a low-privilege user.
USER runner:runner

ENV STEAMAPPID=1026340
ENV GAMEDIR="/home/runner/Steam/steamapps/common/Barotrauma Dedicated Server"

# This env is a fix for this issue: https://github.com/Regalis11/Barotrauma/issues/10112
# This error about Barotrauma only happen on linux!
ENV FIX_PATH="${GAMEDIR}/Daedalic Entertainment GmbH/Barotrauma"
ENV FIX_LINKPATH="${FIX_PATH}/Daedalic Entertainment GmbH/Barotrauma"

# 1. Symlink lib for the game server to access Steam service.
# 2. Make direcotry for saving multiplayer campaigns.
# 3. Make symlink for fixing nested folder issue mentioned above.
# Note: if "~/.local/share/" doesn't exists, the game will try save campaigns inside main folder.
# So we save all files in one place.
RUN set -eux \
    && mkdir -p /home/runner/Steam \
    && mkdir -p /home/runner/.steam/sdk32 \
    && mkdir -p /home/runner/.steam/sdk64 \
    && ln -s /usr/lib/steamcmd/linux32/steamclient.so /home/runner/.steam/sdk32/steamclient.so \
    && ln -s /usr/lib/steamcmd/linux64/steamclient.so /home/runner/.steam/sdk64/steamclient.so \
    && mkdir -p "${GAMEDIR}/Daedalic Entertainment GmbH/Barotrauma/Multiplayer" \
    && mkdir -p "${FIX_PATH}/Daedalic Entertainment GmbH" \
    && ln -s "${FIX_PATH}" "${FIX_LINKPATH}"

VOLUME $GAMEDIR

WORKDIR $GAMEDIR

EXPOSE 27015/udp 27016/udp

# Update SteamCMD on every start.
# If the executable file doesn't exist, SteamCMD will download, install and validate the server.
# If exists, SteamCMD will try to update the server, but without validation (or config files will be replaced).
# Have to use root to chown uploaded files. But will run server in low-privilege.
USER root:root
CMD steamcmd +'quit' \
    && rm -rf /tmp/dumps \
    && chown -R runner:runner "${GAMEDIR}/" \
    && su runner -c '\
        if [ -f "${GAMEDIR}/DedicatedServer" ] ; then \
            steamcmd @ShutdownOnFailedCommand @NoPromptForPassword +login anonymous +app_update ${STEAMAPPID} +'quit' ; \
        else \
            steamcmd @ShutdownOnFailedCommand @NoPromptForPassword +login anonymous +app_update ${STEAMAPPID} validate +'quit' ; \
        fi \
        && "${GAMEDIR}/DedicatedServer"\
    '
